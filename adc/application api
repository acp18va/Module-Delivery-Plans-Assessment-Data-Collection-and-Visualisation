swagger: '2.0'
info:
  description: REST API for the Assessment Data Collection (ADC) form.
  version: 1.0.0
  title: Assessment Data Collection (ADC) Rest API
paths:
  /form:
    post:
      tags:
      - form
      summary: Create a new form
      operationId: addForm
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: form
        description: Form object that needs to be stored
        required: true
        schema:
          $ref: '#/definitions/Form'
      responses:
        405:
          description: Invalid input
  /form/{formId}:
    get:
      tags:
      - form
      summary: Find form by ID
      description: Returns a single form
      operationId: getFormById
      produces:
      - application/json
      parameters:
      - name: formId
        in: path
        description: ID of form to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Form'
        400:
          description: Invalid ID supplied
        404:
          description: Form not found
      security:
      - api_key: []
    put:
      tags:
      - form
      summary: Updates a form
      operationId: updateForm
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: formId
        in: path
        description: ID of form that needs to be updated
        required: true
        type: integer
        format: int64
      - name: form
        in: body
        description: Updated form object.
        required: true
        schema:
          $ref: '#/definitions/Form'
      responses:
        405:
          description: Invalid input
    delete:
      tags:
      - form
      summary: Deletes a form
      operationId: deleteForm
      produces:
      - application/json
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: formId
        in: path
        description: Form id to delete
        required: true
        type: integer
        format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Form not found
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
      - application/json
      parameters:
      - name: email
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        400:
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      produces:
      - application/json
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{email}:
    get:
      tags:
      - user
      summary: Get user by email
      operationId: getUser
      produces:
      - application/json
      parameters:
      - name: email
        in: path
        description: The email to fetch.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found

  /module/{code}:
    get:
      tags:
      - module
      summary: Get module by code
      operationId: getModule
      produces:
      - application/json
      parameters:
      - name: code
        in: path
        description: The module code to fetch.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Module'
        400:
          description: Invalid module code supplied
        404:
          description: Module code not found

securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header

definitions:
  Form:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: Name of form
      status:
        type: string
        description: Form status
        enum:
        - created
        - data gathering
        - data gathered
        - bunching removal
        - completed
      entries:
        type: array
        description: List of entries corresponding to each module
        items:
          $ref: "#/definitions/FormEntry"
      acad_year_start:
        type: string
        description: academic year start date
      acad_year_end:
        type: string
        description: academic year end date

  FormEntry:
    type: object
    properties:
      id:
        type: integer
        format: int64
      module:
        $ref: "#/definitions/Module"

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user_type:
        type: string
        description: Type of user
        enum:
          - ltm
          - academic
          - tutor
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string

  Module:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string
      name:
        type: string
      semester:
        type: string
        enum:
        - one
        - two
        - both
      academic:
        $ref: '#/definitions/User'
      assessments:
        type: array
        items:
          $ref: '#/definitions/Assessment'

  Assessment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      module:
        $ref: '#/definitions/Module'
      format:
        type: string
        enum:
        - mole quiz
        - assignment
        - presentation
        - formal exam
        - assessed lab
        - group form
        - portfolio
      name:
        type: string
      marks:
        type: integer
      release_date:
        type: string
      submit_date:
        type: string
        format: date-time

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /Desi-Dragons/ADC/1.0.0
schemes:
 - https
 - http